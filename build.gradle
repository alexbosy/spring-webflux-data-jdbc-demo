plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'groovy'
	id 'org.unbroken-dome.test-sets' version '4.0.0'
}

repositories {
	mavenCentral()
	maven {
		url "https://plugins.gradle.org/m2/"
	}
}

version = (findProperty('version') == 'unspecified') ? 'latest' : version

java {
	sourceCompatibility = '17'
}

jar {
	archivesBaseName = 'user-service'
}

springBoot {
	buildInfo {
		properties {
			additional = [
					time: new Date().format('dd-MM-yyyy:HH:mm:ss zzz'),
					OS  : "${System.properties['os.name']} (${System.properties['os.version']})",
					JVM : "Vendor: ${System.properties['java.specification.vendor']}, Version: ${System.properties['java.version']}"
			]
		}
	}
}

testSets {
	integrationTest { dirName = 'test-integration' }
	acceptanceTest { dirName = 'test-acceptance' }
}

tasks.withType(Test) {
	systemProperties System.properties
}

tasks.withType(Test) {
	useJUnitPlatform()
}

task t(dependsOn: test)
task it(dependsOn: integrationTest)
task at(dependsOn: acceptanceTest)

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jetty'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.bouncycastle:bcprov-ext-jdk15on:1.70'
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	implementation 'io.github.resilience4j:resilience4j-spring-boot2:2.0.0'
	implementation 'io.github.resilience4j:resilience4j-reactor:2.0.0'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'

	implementation 'com.google.guava:guava:31.1-jre'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'

	implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.6.14'
	implementation 'org.springdoc:springdoc-openapi-security:1.6.14'

	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	testImplementation 'org.codehaus.groovy:groovy-all:3.0.13'
	testImplementation 'org.spockframework:spock-core:2.3-groovy-3.0'
	testImplementation 'org.spockframework:spock-spring:2.3-groovy-3.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.graphql:spring-graphql-test'

	acceptanceTestImplementation 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
	acceptanceTestImplementation 'io.fabric8:mockwebserver:0.2.2'

	compileOnly 'org.projectlombok:lombok:1.18.26'
	annotationProcessor 'org.projectlombok:lombok:1.18.26'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
}

configurations {
	all*.exclude module: 'spring-boot-starter-logging'
}

tasks.named("bootBuildImage") {
	environment = ["BP_JVM_VERSION" : "17.*"]
	imageName = "${project.name}:${version}"
	buildpacks = ["gcr.io/paketo-buildpacks/azul-zulu", "urn:cnb:builder:paketo-buildpacks/java"]
	tags = ["${project.name}:latest"]
}



